<%+header%>
	<script type="text/javascript" src="<%=media%>/assets/js/highcharts.js"></script>
	<script type="text/javascript" src="<%=media%>/assets/js/dark-unica.js"></script>
	<style>
		.panel-body{padding:0px;}
	</style>
	<script>
	    var _fan = 0;
	    var _temp = 0;
	    var _i = 50 ;
	    var _ghs5s = 0;
	    var series = 0;
	    var series1 = 0;
	    var series2 = 0;


	    function getstatus() {
		/**
		* Get Status
		* @author Wanggh
		*/
		$.ajax({
		    url:'<%=luci.dispatcher.build_url("avalon", "api", "getstatus")%>',
		    type:'post',
		    dataType: 'json',
		    success:function(_data){
			if (_data) {
			    _fan = _data.fan ? 100 * Math.floor(_data.fan/100) : '0';
			    _temp = _data.temp ? _data.temp : '0';
			    _ghs5s = _data.ghs5s ? _data.ghs5s : '0';

			    $('#ghsav').html(_data.ghs5s ? Math.round(_data.ghs5s) + 'GHs' : '0GHs');
			    $('#mac').html(_data.network.mac ? _data.network.mac : '--');
			    $('#ip4').html(_data.network.ip4 ? _data.network.ip4 : '--');
			    $('#ip6').html(_data.network.ip6 ? _data.network.ip6 : '--');
			    $('#ghs15m').html(_data.ghs15m ? Math.round(_data.ghs15m) + 'GHs' : '0GHs');

			    if (_data.pool[0]) {
				$('#pool').html(_data.pool[0].url ? _data.pool[0].url : 'no-pool');
				$('#diff').html(_data.pool[0].diff ? _data.pool[0].diff : 'no-diff');
				$('#accept').html(_data.pool[0].accept ? _data.pool[0].accept : 'no-accept');
			    }
			    $("#modularcnt").html(_data.modularcnt ? _data.modularcnt : '0');
			    $("#voltage").html(_data.voltage ? _data.voltage + 'V' : '0');
			    $("#freq").html(_data.freq ? _data.freq + 'GHz' : '0');

			    //var temp = _data.temp ? _data.temp : '';
			    //temp2 = temp.substr(0,7);
			    //$("#temp").html(temp2);
			    $("#temp").html(_data.temp ? _data.temp + '℃' : '0');
			    $("#dh").html(_data.dh ? _data.dh + '%' : '0');
			    $("#mmver").html(_data.mmver ? _data.mmver : '0');

			    $("#openwrtver").html(_data.openwrtver ? _data.openwrtver : '--');
			    $("#time").html(_data.systime ? _data.systime : '--');

			}
		    },
		});

		var x = (new Date()).getTime(),
		y = parseInt(_fan);
		y1 = parseInt(_temp);
		y2 = parseInt(_ghs5s);
		series.addPoint([x, y], true, true);
		series1.addPoint([x, y1], true, true);
		series2.addPoint([x, y2], true, true);
	    }

	    $(function () {
		var _intvalTime = 5000;

		$(document).ready(function() {
		    Highcharts.setOptions({
			global: {
			    useUTC: false
			}
		    });

		    var chart;
		    chart = new Highcharts.Chart({
			chart: {
			    renderTo: 'container-speed-temperature',
			    type: 'spline',
			    animation: Highcharts.svg,
			    events: {
				load: function() {

				    // set up the updating of the chart each second
				    series = this.series[0];
				    series1 = this.series[1];
				    series2 = this.series[2];

				    getstatus();
				    setInterval(function() {
					getstatus();
				    }, _intvalTime);
				}
			    }
			},
			title: {
			    text: 'Active Charts'
			},
			subtitle: {
			    text: 'Update every 5 seconds'
			},
			xAxis: {
			    type: 'datetime',
			    tickPixelInterval: 150
			},

			credits:{
			    enabled: false
			},
			yAxis: [{
			    labels: {
				//format: '{value} mm',
				formatter: function() {
				    return this.value +'GHs';
				},
				style: {
				    color: '#90ec7d'
				}
			    },
			    title: {
				text: 'Ghs',
				style: {
				    color: '#90ec7d'
				}
			    },
			    opposite: true ,
			},
			{
			    labels: {
				//format: '{value} mm',
				formatter: function() {
				    return this.value +'RPM';
				},
				style: {
				    color: '#7cb5ec'
				}
			    },
			    title: {
				text: 'Fan',
				style: {
				    color: '#7cb5ec'
				}
			    },
			},
			{
			    labels: {
				formatter: function() {
				    return this.value +'°C';
				},
				//format: '{value}°C',
				style: {
				    color: '#ffbc75'
				}
			    },
			    title: {
				text: 'Temperature',
				style: {
				    color: '#ffbc75'
				}
			    },
			},
			],

			tooltip: {
			    shared: true,
			    formatter : function(){
				//var s = '<b>' + this.x + '</b>';
				var s = '';
				$.each(this.points,function(){
				    switch(this.series.name){
					case 'Fan':
					s +=this.series.name + ':' + this.y + 'RPM';
					break;
					case 'Temperature':
					s +=this.series.name + ':' + this.y + '℃';
					break;
					case 'GHs':
					s +=this.series.name + ':' + this.y + 'GHs';
					default :
					break;
				    }
				    s +='<br>';
				})
				return s;
			    }

			},
			legend: {
			    layout: 'vertical',
			    align: 'left',
			    x: 120,
			    verticalAlign: 'top',
			    floating: true,
			    backgroundColor: '#2f2f31'
			},
			exporting: {
			    enabled: false
			},
			series: [{
			    yAxis:1,
			    color: '#7cb5ec',
			    name: 'Fan',
			    data: (function() { // generate an array of random data
				var data = [],
				time = (new Date()).getTime(),
				i;
				for (i = -_i; i <= 0; i++) {
				    data.push({
					x: time + i * 1000,
					y: null
				    });
				}
				return data;
			    })(),
			    tooltip: {
				valueSuffix: ' RPM'
			    },
			    marker: {
				enabled: false
			    },
			    dashStyle: 'shortdot',
			},
			{
			    color: '#ffbc75',
			    yAxis: 2,
			    name: 'Temperature',
			    data: (function() { // generate an array of random data
				var data = [],
				time = (new Date()).getTime(),
				i;

				for (i = -_i; i <= 0; i++) {
				    data.push({
					x: time + i * 1000,
					y: null
				    });
				}
				return data;
			    })() ,
			    tooltip: {
				valueSuffix: '°C'
			    },
			    marker: {
				enabled: false
			    },
			    dashStyle: 'shortdot',
			},
			{
			    color: '#90ec7d',
			    name: 'GHs',
			    data: (function() { // generate an array of random data
				var data = [],
				time = (new Date()).getTime(),
				i;
				for (i = -_i; i <= 0; i++) {
				    data.push({
					x: time + i * 1000,
					y: null
				    });
				}
				return data;
			    })() ,
			    tooltip: {
				valueSuffix: 'GHs'
			    },
			    marker: {
				enabled: false
			    },
			    //dashStyle: 'shortdot',
			}]
		    });

		});

	    });
	</script>
		<h2><a id="content" name="content">Dashboard</a></h2>
		<div id="page-inner">
			<div class="row margin-left-right-0 margin-top-20 cginfo">
			<div class="col-md-6 col-sm-6">
				<div class="bg-color-333 height-148 cginfo-padding">
				<h2>Network Information <span><a href="#"> <a href="<%=luci.dispatcher.build_url("avalon", "page", "network")%>"> > Quick setting</a></a></span></h2>
				<p><strong>MAC-Address : </strong> <span id='mac'>--</span></p>
				<p><strong>IPv4 : </strong> <span id='ip4'>--</span></p>
				<p><strong>IPv6 : </strong> <span id='ip6'>--</span></p>
				</div>
			</div>
			<div class="col-md-6 col-sm-6">
				<div class="bg-color-333 height-148 cginfo-padding">
				<h2>Overview</h2>
				<p>Controller Versions : <span id="openwrtver">--</span></p>
				<p>Time : <span id="time">--</span></p>
				</div>
			</div>
			</div>

			<div class="row margin-left-right-0 margin-top-20 cginfo">
			<div class="col-md-2 col-sm-2">
				<div class="bg-color-333 height-148 cginfo-padding">
				<h2>Hash Rate</h2>
				<p>Per 5s : <span id="ghsav">0GHs</span></p>
				<p>Per 15m : <span id="ghs15m">0GHs</span></p>
				</div>
			</div>
			<div class="col-md-4 col-sm-4">
				<div class="bg-color-333 height-148 cginfo-padding">
				<h2>Current Pool <span><a href="<%=luci.dispatcher.build_url("avalon", "page", "configure")%>"> > Quick setting</a></span></h2>
				<p id='pool'>--</p>
				<p>Diffcult : <span id='diff'>--</span> | Accepted : <span id='accept'>--</span></p>
				</div>
			</div>
			<div class="col-md-6 col-sm-6">
				<div class="bg-color-333 height-148 cginfo-padding">
				<h2>Modules Information </h2>
				<p>Live Modules : <span id='modularcnt'>0</span> | ASIC Voltage : <span id='voltage'>0</span> | ASIC Frequency : <span id='freq'>0</span></p>
				<p>Temperature : <span id='temp'>0</span> | DH : <span id='dh'>0</span> | MM Version : <span id='mmver'>0</span></p>
				</div>
			</div>
			</div>
			<!-- /. ROW  -->
			<hr />

			<!--jackie start-->
			<div class="row margin-left-right-0" >
			<!--风扇转速start-->
			<div class="col-md-12 col-sm-12 col-xs-12">
				<div class="panel panel-default">
				<div class="panel-heading">
					<strong>Fan   /  Temperature  / GHs</strong>
				</div>
				<div class="panel-body">
					<div class="table-responsive">
					<div id="container-speed-temperature" style="height:400px"></div>
					</div>
				</div>
				</div>
			</div>
			<!--风扇转速end-->
			</div>
			<!-- jackie end-->
			<!-- /. ROW  -->
		</div>
<%+footer%>
